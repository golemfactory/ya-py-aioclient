diff -r -c target/ya_market/api/provider_api.py src/ya_market/api/provider_api.py
*** target/ya_market/api/provider_api.py	2020-12-14 16:11:39.749000000 +0100
--- src/ya_market/api/provider_api.py	2020-12-14 16:15:41.878195501 +0100
***************
*** 102,108 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 102,108 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 236,242 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 236,242 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 366,372 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 366,372 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 496,502 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 496,502 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 1124,1130 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 1124,1130 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 1250,1256 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 1250,1256 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 1379,1385 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 1379,1385 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 1502,1508 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 1502,1508 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
Only in target/ya_market/api: provider_api.py.orig
Only in target/ya_market/api: provider_api.py.rej
Only in src/ya_market/api: __pycache__
diff -r -c target/ya_market/api/requestor_api.py src/ya_market/api/requestor_api.py
*** target/ya_market/api/requestor_api.py	2020-12-14 16:11:39.749000000 +0100
--- src/ya_market/api/requestor_api.py	2020-12-14 16:15:41.890195358 +0100
***************
*** 96,102 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 96,102 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 228,234 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 228,234 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 358,364 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 358,364 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 487,493 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 487,493 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 611,617 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 611,617 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 1370,1376 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 1370,1376 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 1499,1505 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 1499,1505 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 1622,1628 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 1622,1628 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
Only in target/ya_market/api: requestor_api.py.orig
Only in target/ya_market/api: requestor_api.py.rej
Only in target/ya_market: configuration.py.orig
Only in target/ya_market: configuration.py.rej
Only in target/ya_market: __init__.py.orig
Only in target/ya_market: __init__.py.rej
diff -r -c target/ya_market/models/agreement_approved_event.py src/ya_market/models/agreement_approved_event.py
*** target/ya_market/models/agreement_approved_event.py	2020-12-14 16:11:39.709000000 +0100
--- src/ya_market/models/agreement_approved_event.py	2020-12-14 16:22:50.577076752 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_market.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 49,55 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 47,53 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
diff -r -c target/ya_market/models/agreement_cancelled_event.py src/ya_market/models/agreement_cancelled_event.py
*** target/ya_market/models/agreement_cancelled_event.py	2020-12-14 16:11:39.709000000 +0100
--- src/ya_market/models/agreement_cancelled_event.py	2020-12-14 16:22:50.613076321 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_market.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 77,83 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 75,81 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
Only in target/ya_market/models: agreement_event_all_of.py.orig
Only in target/ya_market/models: agreement_event.py.orig
diff -r -c target/ya_market/models/agreement_operation_event.py src/ya_market/models/agreement_operation_event.py
*** target/ya_market/models/agreement_operation_event.py	2020-12-14 16:11:39.709000000 +0100
--- src/ya_market/models/agreement_operation_event.py	2020-12-14 16:22:50.661075747 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_market.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 145,151 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 143,149 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
Only in target/ya_market/models: agreement.py.orig
Only in target/ya_market/models: agreement.py.rej
diff -r -c target/ya_market/models/agreement_rejected_event_all_of.py src/ya_market/models/agreement_rejected_event_all_of.py
*** target/ya_market/models/agreement_rejected_event_all_of.py	2020-12-14 16:11:39.709000000 +0100
--- src/ya_market/models/agreement_rejected_event_all_of.py	2020-12-14 16:22:50.617076273 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_market.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 77,83 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 75,81 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
diff -r -c target/ya_market/models/agreement_rejected_event.py src/ya_market/models/agreement_rejected_event.py
*** target/ya_market/models/agreement_rejected_event.py	2020-12-14 16:11:39.709000000 +0100
--- src/ya_market/models/agreement_rejected_event.py	2020-12-14 16:22:50.585076657 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_market.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 77,83 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 75,81 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
diff -r -c target/ya_market/models/agreement_terminated_event_all_of.py src/ya_market/models/agreement_terminated_event_all_of.py
*** target/ya_market/models/agreement_terminated_event_all_of.py	2020-12-14 16:11:39.709000000 +0100
--- src/ya_market/models/agreement_terminated_event_all_of.py	2020-12-14 16:22:50.529077327 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_market.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 137,143 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 135,141 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
diff -r -c target/ya_market/models/agreement_terminated_event.py src/ya_market/models/agreement_terminated_event.py
*** target/ya_market/models/agreement_terminated_event.py	2020-12-14 16:11:39.709000000 +0100
--- src/ya_market/models/agreement_terminated_event.py	2020-12-14 16:22:50.513077518 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_market.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 137,143 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 135,141 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
Only in target/ya_market/models: demand_all_of.py.orig
Only in target/ya_market/models: demand_all_of.py.rej
Only in target/ya_market/models: demand_offer_base.py.orig
Only in target/ya_market/models: demand.py.orig
Only in target/ya_market/models: demand.py.rej
Only in target/ya_market/models: event.py.orig
Only in target/ya_market/models: event.py.rej
Only in target/ya_market/models: __init__.py.orig
Only in target/ya_market/models: offer_all_of.py.orig
Only in target/ya_market/models: offer_all_of.py.rej
Only in target/ya_market/models: offer.py.orig
Only in target/ya_market/models: offer.py.rej
Only in target/ya_market/models: property_query_event_all_of.py.orig
Only in target/ya_market/models: property_query_event.py.orig
Only in target/ya_market/models: property_query.py.orig
Only in target/ya_market/models: proposal_all_of.py.orig
Only in target/ya_market/models: proposal_all_of.py.rej
Only in target/ya_market/models: proposal_event_all_of.py.orig
Only in target/ya_market/models: proposal_event.py.orig
Only in target/ya_market/models: proposal.py.orig
Only in target/ya_market/models: proposal.py.rej
diff -r -c target/ya_market/models/proposal_rejected_event_all_of.py src/ya_market/models/proposal_rejected_event_all_of.py
*** target/ya_market/models/proposal_rejected_event_all_of.py	2020-12-14 16:11:39.709000000 +0100
--- src/ya_market/models/proposal_rejected_event_all_of.py	2020-12-14 16:22:50.557076992 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_market.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 104,110 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 102,108 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
diff -r -c target/ya_market/models/proposal_rejected_event.py src/ya_market/models/proposal_rejected_event.py
*** target/ya_market/models/proposal_rejected_event.py	2020-12-14 16:11:39.709000000 +0100
--- src/ya_market/models/proposal_rejected_event.py	2020-12-14 16:22:50.461078140 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_market.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 104,110 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 102,108 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
Only in src/ya_market/models: __pycache__
diff -r -c target/ya_market/models/reason.py src/ya_market/models/reason.py
*** target/ya_market/models/reason.py	2020-12-14 16:11:39.709000000 +0100
--- src/ya_market/models/reason.py	2020-12-14 16:22:50.541077183 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_market.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 78,84 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 76,82 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
Only in src/ya_market: __pycache__
Only in target/ya_market: rest.py.orig
Only in src/ya_market/test: __pycache__
diff -r -c target/ya_market/test/test_agreement_event_all_of.py src/ya_market/test/test_agreement_event_all_of.py
*** target/ya_market/test/test_agreement_event_all_of.py	2020-12-14 16:11:39.745000000 +0100
--- src/ya_market/test/test_agreement_event_all_of.py	2020-12-14 16:35:54.730388049 +0100
***************
*** 34,45 ****
              params are included, when True both required and
              optional params are included """
          # model = ya_market.models.agreement_event_all_of.AgreementEventAllOf()  # noqa: E501
          if include_optional :
              return AgreementEventAllOf(
                  agreement = ya_market.models.agreement.Agreement(
                      agreement_id = '0', 
!                     demand = null, 
!                     offer = null, 
                      valid_to = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                      approved_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                      state = 'Proposal', 
--- 34,47 ----
              params are included, when True both required and
              optional params are included """
          # model = ya_market.models.agreement_event_all_of.AgreementEventAllOf()  # noqa: E501
+         demand = ya_market.models.DemandOfferBase(properties=dict(), constraints=str())
+         offer = ya_market.models.DemandOfferBase(properties=dict(), constraints=str())
          if include_optional :
              return AgreementEventAllOf(
                  agreement = ya_market.models.agreement.Agreement(
                      agreement_id = '0', 
!                     demand = demand, 
!                     offer = offer, 
                      valid_to = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                      approved_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                      state = 'Proposal', 
***************
*** 53,60 ****
              return AgreementEventAllOf(
                  agreement = ya_market.models.agreement.Agreement(
                      agreement_id = '0', 
!                     demand = null, 
!                     offer = null, 
                      valid_to = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                      approved_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                      state = 'Proposal', 
--- 55,62 ----
              return AgreementEventAllOf(
                  agreement = ya_market.models.agreement.Agreement(
                      agreement_id = '0', 
!                     demand = demand, 
!                     offer = offer, 
                      valid_to = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                      approved_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                      state = 'Proposal', 
Only in target/ya_market/test: test_agreement_event_all_of.py.orig
Only in target/ya_market/test: test_agreement_event_all_of.py.rej
diff -r -c target/ya_market/test/test_agreement_event.py src/ya_market/test/test_agreement_event.py
*** target/ya_market/test/test_agreement_event.py	2020-12-14 16:11:39.745000000 +0100
--- src/ya_market/test/test_agreement_event.py	2020-12-14 16:32:23.085621400 +0100
***************
*** 34,45 ****
              params are included, when True both required and
              optional params are included """
          # model = ya_market.models.agreement_event.AgreementEvent()  # noqa: E501
          if include_optional :
              return AgreementEvent(
                  agreement = ya_market.models.agreement.Agreement(
                      agreement_id = '0', 
!                     demand = null, 
!                     offer = null, 
                      valid_to = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                      approved_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                      state = 'Proposal', 
--- 34,47 ----
              params are included, when True both required and
              optional params are included """
          # model = ya_market.models.agreement_event.AgreementEvent()  # noqa: E501
+         demand = ya_market.models.DemandOfferBase(properties=dict(), constraints=str())
+         offer = ya_market.models.DemandOfferBase(properties=dict(), constraints=str())
          if include_optional :
              return AgreementEvent(
                  agreement = ya_market.models.agreement.Agreement(
                      agreement_id = '0', 
!                     demand = demand, 
!                     offer = offer, 
                      valid_to = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                      approved_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                      state = 'Proposal', 
***************
*** 53,60 ****
              return AgreementEvent(
                  agreement = ya_market.models.agreement.Agreement(
                      agreement_id = '0', 
!                     demand = null, 
!                     offer = null, 
                      valid_to = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                      approved_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                      state = 'Proposal', 
--- 55,62 ----
              return AgreementEvent(
                  agreement = ya_market.models.agreement.Agreement(
                      agreement_id = '0', 
!                     demand = demand, 
!                     offer = offer, 
                      valid_to = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                      approved_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                      state = 'Proposal', 
Only in target/ya_market/test: test_agreement_event.py.orig
Only in target/ya_market/test: test_agreement_event.py.rej
diff -r -c target/ya_market/test/test_agreement.py src/ya_market/test/test_agreement.py
*** target/ya_market/test/test_agreement.py	2020-12-14 16:11:39.745000000 +0100
--- src/ya_market/test/test_agreement.py	2020-12-14 16:34:17.159849262 +0100
***************
*** 34,44 ****
              params are included, when True both required and
              optional params are included """
          # model = ya_market.models.agreement.Agreement()  # noqa: E501
          if include_optional :
              return Agreement(
                  agreement_id = '0', 
!                 demand = null, 
!                 offer = null, 
                  valid_to = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                  approved_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                  state = 'Proposal', 
--- 34,46 ----
              params are included, when True both required and
              optional params are included """
          # model = ya_market.models.agreement.Agreement()  # noqa: E501
+         demand = ya_market.models.DemandOfferBase(properties=dict(), constraints=str())
+         offer = ya_market.models.DemandOfferBase(properties=dict(), constraints=str())
          if include_optional :
              return Agreement(
                  agreement_id = '0', 
!                 demand = demand, 
!                 offer = offer, 
                  valid_to = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                  approved_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                  state = 'Proposal', 
***************
*** 51,58 ****
          else :
              return Agreement(
                  agreement_id = '0',
!                 demand = null,
!                 offer = null,
                  valid_to = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                  state = 'Proposal',
                  timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
--- 53,60 ----
          else :
              return Agreement(
                  agreement_id = '0',
!                 demand = demand,
!                 offer = offer,
                  valid_to = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                  state = 'Proposal',
                  timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
Only in target/ya_market/test: test_agreement.py.orig
Only in target/ya_market/test: test_agreement.py.rej
Only in target/ya_market/test: test_demand_all_of.py.orig
Only in target/ya_market/test: test_demand_all_of.py.rej
diff -r -c target/ya_market/test/test_demand.py src/ya_market/test/test_demand.py
*** target/ya_market/test/test_demand.py	2020-12-14 16:11:39.741000000 +0100
--- src/ya_market/test/test_demand.py	2020-12-14 16:36:53.749524610 +0100
***************
*** 35,41 ****
          # model = ya_market.models.demand.Demand()  # noqa: E501
          if include_optional :
              return Demand(
!                 properties = None, 
                  constraints = '0', 
                  demand_id = '0', 
                  requestor_id = '0', 
--- 35,41 ----
          # model = ya_market.models.demand.Demand()  # noqa: E501
          if include_optional :
              return Demand(
!                 properties = dict(), 
                  constraints = '0', 
                  demand_id = '0', 
                  requestor_id = '0', 
***************
*** 43,49 ****
              )
          else :
              return Demand(
!                 properties = None,
                  constraints = '0',
                  demand_id = '0',
                  requestor_id = '0',
--- 43,49 ----
              )
          else :
              return Demand(
!                 properties = dict(),
                  constraints = '0',
                  demand_id = '0',
                  requestor_id = '0',
Only in target/ya_market/test: test_demand.py.orig
Only in target/ya_market/test: test_demand.py.rej
Only in target/ya_market/test: test_offer_all_of.py.orig
Only in target/ya_market/test: test_offer_all_of.py.rej
diff -r -c target/ya_market/test/test_offer.py src/ya_market/test/test_offer.py
*** target/ya_market/test/test_offer.py	2020-12-14 16:11:39.741000000 +0100
--- src/ya_market/test/test_offer.py	2020-12-14 16:36:53.737524784 +0100
***************
*** 35,41 ****
          # model = ya_market.models.offer.Offer()  # noqa: E501
          if include_optional :
              return Offer(
!                 properties = None, 
                  constraints = '0', 
                  offer_id = '0', 
                  provider_id = '0', 
--- 35,41 ----
          # model = ya_market.models.offer.Offer()  # noqa: E501
          if include_optional :
              return Offer(
!                 properties = dict(), 
                  constraints = '0', 
                  offer_id = '0', 
                  provider_id = '0', 
***************
*** 43,49 ****
              )
          else :
              return Offer(
!                 properties = None,
                  constraints = '0',
                  offer_id = '0',
                  provider_id = '0',
--- 43,49 ----
              )
          else :
              return Offer(
!                 properties = dict(),
                  constraints = '0',
                  offer_id = '0',
                  provider_id = '0',
Only in target/ya_market/test: test_offer.py.orig
Only in target/ya_market/test: test_offer.py.rej
diff -r -c target/ya_market/test/test_property_query_event_all_of.py src/ya_market/test/test_property_query_event_all_of.py
*** target/ya_market/test/test_property_query_event_all_of.py	2020-12-14 16:11:39.741000000 +0100
--- src/ya_market/test/test_property_query_event_all_of.py	2020-12-14 16:32:57.197083414 +0100
***************
*** 38,44 ****
          if include_optional :
              return PropertyQueryEventAllOf(
                  property_query = ya_market.models.property_query.PropertyQuery(
!                     issuer_properties = ya_market.models.issuer_properties.issuerProperties(), 
                      query_id = '0', 
                      queried_properties = [
                          '0'
--- 38,44 ----
          if include_optional :
              return PropertyQueryEventAllOf(
                  property_query = ya_market.models.property_query.PropertyQuery(
!                     issuer_properties = dict(), 
                      query_id = '0', 
                      queried_properties = [
                          '0'
***************
*** 47,53 ****
          else :
              return PropertyQueryEventAllOf(
                  property_query = ya_market.models.property_query.PropertyQuery(
!                     issuer_properties = ya_market.models.issuer_properties.issuerProperties(), 
                      query_id = '0', 
                      queried_properties = [
                          '0'
--- 47,53 ----
          else :
              return PropertyQueryEventAllOf(
                  property_query = ya_market.models.property_query.PropertyQuery(
!                     issuer_properties = dict(), 
                      query_id = '0', 
                      queried_properties = [
                          '0'
Only in target/ya_market/test: test_property_query_event_all_of.py.orig
Only in target/ya_market/test: test_property_query_event_all_of.py.rej
diff -r -c target/ya_market/test/test_property_query_event.py src/ya_market/test/test_property_query_event.py
*** target/ya_market/test/test_property_query_event.py	2020-12-14 16:11:39.741000000 +0100
--- src/ya_market/test/test_property_query_event.py	2020-12-14 16:32:57.205083287 +0100
***************
*** 36,42 ****
          if include_optional :
              return PropertyQueryEvent(
                  property_query = ya_market.models.property_query.PropertyQuery(
!                     issuer_properties = ya_market.models.issuer_properties.issuerProperties(), 
                      query_id = '0', 
                      queried_properties = [
                          '0'
--- 36,42 ----
          if include_optional :
              return PropertyQueryEvent(
                  property_query = ya_market.models.property_query.PropertyQuery(
!                     issuer_properties = dict(), 
                      query_id = '0', 
                      queried_properties = [
                          '0'
***************
*** 45,51 ****
          else :
              return PropertyQueryEvent(
                  property_query = ya_market.models.property_query.PropertyQuery(
!                     issuer_properties = ya_market.models.issuer_properties.issuerProperties(), 
                      query_id = '0', 
                      queried_properties = [
                          '0'
--- 45,51 ----
          else :
              return PropertyQueryEvent(
                  property_query = ya_market.models.property_query.PropertyQuery(
!                     issuer_properties = dict(), 
                      query_id = '0', 
                      queried_properties = [
                          '0'
Only in target/ya_market/test: test_property_query_event.py.orig
Only in target/ya_market/test: test_property_query_event.py.rej
Only in target/ya_market/test: test_property_query.py.orig
Only in target/ya_market/test: test_property_query.py.rej
Only in target/ya_market/test: test_proposal_all_of.py.orig
Only in target/ya_market/test: test_proposal_all_of.py.rej
diff -r -c target/ya_market/test/test_proposal_event_all_of.py src/ya_market/test/test_proposal_event_all_of.py
*** target/ya_market/test/test_proposal_event_all_of.py	2020-12-14 16:11:39.745000000 +0100
--- src/ya_market/test/test_proposal_event_all_of.py	2020-12-14 16:34:47.995382539 +0100
***************
*** 33,45 ****
              params are included, when True both required and
              optional params are included """
          # model = ya_market.models.proposal_event_all_of.ProposalEventAllOf()  # noqa: E501
          if include_optional :
              return ProposalEventAllOf(
!                 proposal = null
              )
          else :
              return ProposalEventAllOf(
!                 proposal = null,
          )
  
      def testProposalEventAllOf(self):
--- 33,53 ----
              params are included, when True both required and
              optional params are included """
          # model = ya_market.models.proposal_event_all_of.ProposalEventAllOf()  # noqa: E501
+         proposal = ya_market.models.proposal.Proposal(
+             properties=dict(),
+             constraints='0',
+             proposal_id='0',
+             issuer_id='0',
+             state='Initial',
+             timestamp='2020-12-01T08:00:00.00Z',
+         )
          if include_optional :
              return ProposalEventAllOf(
!                 proposal = proposal
              )
          else :
              return ProposalEventAllOf(
!                 proposal = proposal,
          )
  
      def testProposalEventAllOf(self):
Only in target/ya_market/test: test_proposal_event_all_of.py.orig
Only in target/ya_market/test: test_proposal_event_all_of.py.rej
diff -r -c target/ya_market/test/test_proposal_event.py src/ya_market/test/test_proposal_event.py
*** target/ya_market/test/test_proposal_event.py	2020-12-14 16:11:39.745000000 +0100
--- src/ya_market/test/test_proposal_event.py	2020-12-14 16:33:43.368366427 +0100
***************
*** 33,45 ****
              params are included, when True both required and
              optional params are included """
          # model = ya_market.models.proposal_event.ProposalEvent()  # noqa: E501
          if include_optional :
              return ProposalEvent(
!                 proposal = null
              )
          else :
              return ProposalEvent(
!                 proposal = null,
          )
  
      def testProposalEvent(self):
--- 33,53 ----
              params are included, when True both required and
              optional params are included """
          # model = ya_market.models.proposal_event.ProposalEvent()  # noqa: E501
+         proposal = ya_market.models.proposal.Proposal(
+             properties=dict(),
+             constraints='0',
+             proposal_id='0',
+             issuer_id='0',
+             state='Initial',
+             timestamp='2020-12-01T08:00:00.00Z',
+         )
          if include_optional :
              return ProposalEvent(
!                 proposal = proposal
              )
          else :
              return ProposalEvent(
!                 proposal = proposal,
          )
  
      def testProposalEvent(self):
Only in target/ya_market/test: test_proposal_event.py.orig
Only in target/ya_market/test: test_proposal_event.py.rej
diff -r -c target/ya_market/test/test_proposal.py src/ya_market/test/test_proposal.py
*** target/ya_market/test/test_proposal.py	2020-12-14 16:11:39.745000000 +0100
--- src/ya_market/test/test_proposal.py	2020-12-14 16:37:02.877392303 +0100
***************
*** 35,41 ****
          # model = ya_market.models.proposal.Proposal()  # noqa: E501
          if include_optional :
              return Proposal(
!                 properties = None, 
                  constraints = '0', 
                  proposal_id = '0', 
                  issuer_id = '0', 
--- 35,41 ----
          # model = ya_market.models.proposal.Proposal()  # noqa: E501
          if include_optional :
              return Proposal(
!                 properties = dict(), 
                  constraints = '0', 
                  proposal_id = '0', 
                  issuer_id = '0', 
***************
*** 45,51 ****
              )
          else :
              return Proposal(
!                 properties = None,
                  constraints = '0',
                  proposal_id = '0',
                  issuer_id = '0',
--- 45,51 ----
              )
          else :
              return Proposal(
!                 properties = dict(),
                  constraints = '0',
                  proposal_id = '0',
                  issuer_id = '0',
Only in target/ya_market/test: test_proposal.py.orig
Only in target/ya_market/test: test_proposal.py.rej
Only in target/ya_market/test: test_provider_api.py.orig
Only in target/ya_market/test: test_requestor_api.py.orig

diff -r -c target/ya_payment/api/provider_api.py src/ya_payment/api/provider_api.py
*** target/ya_payment/api/provider_api.py	2020-12-14 16:11:39.769000000 +0100
--- src/ya_payment/api/provider_api.py	2020-12-14 16:15:41.910195120 +0100
***************
*** 98,104 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 98,104 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 222,228 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 222,228 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 341,347 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 341,347 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 464,470 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 464,470 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 587,593 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 587,593 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 701,707 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 701,707 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 824,830 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 824,830 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 947,953 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 947,953 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 1061,1067 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 1061,1067 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 1184,1190 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 1184,1190 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 1310,1316 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 1310,1316 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 1436,1442 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 1436,1442 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 1900,1906 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 1900,1906 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 2024,2030 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 2024,2030 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
Only in target/ya_payment/api: provider_api.py.orig
Only in target/ya_payment/api: provider_api.py.rej
Only in src/ya_payment/api: __pycache__
diff -r -c target/ya_payment/api/requestor_api.py src/ya_payment/api/requestor_api.py
*** target/ya_payment/api/requestor_api.py	2020-12-14 16:11:39.769000000 +0100
--- src/ya_payment/api/requestor_api.py	2020-12-14 16:15:41.918195025 +0100
***************
*** 101,107 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 101,107 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 242,248 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 242,248 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 857,863 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 857,863 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 980,986 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 980,986 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 1103,1109 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 1103,1109 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 1219,1225 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 1219,1225 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 1332,1338 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 1332,1338 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 1455,1461 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 1455,1461 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 1578,1584 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 1578,1584 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 1692,1698 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 1692,1698 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 1815,1821 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 1815,1821 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 1941,1947 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 1941,1947 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 2067,2073 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 2067,2073 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 2290,2296 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 2290,2296 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 2414,2420 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 2414,2420 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
***************
*** 2555,2561 ****
              ]
          )
  
!         for key, val in six.iteritems(local_var_params['kwargs']):
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
--- 2555,2561 ----
              ]
          )
  
!         for key, val in local_var_params['kwargs'].items():
              if key not in all_params:
                  raise ApiTypeError(
                      "Got an unexpected keyword argument '%s'"
Only in target/ya_payment/api: requestor_api.py.orig
Only in target/ya_payment/api: requestor_api.py.rej
Only in target/ya_payment: __init__.py.orig
diff -r -c target/ya_payment/models/account.py src/ya_payment/models/account.py
*** target/ya_payment/models/account.py	2020-12-14 16:11:39.713000000 +0100
--- src/ya_payment/models/account.py	2020-12-14 16:22:50.525077374 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_payment.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 105,111 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 103,109 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
Only in target/ya_payment/models: allocation.py.orig
Only in target/ya_payment/models: allocation.py.rej
diff -r -c target/ya_payment/models/debit_note_accepted_event.py src/ya_payment/models/debit_note_accepted_event.py
*** target/ya_payment/models/debit_note_accepted_event.py	2020-12-14 16:11:39.713000000 +0100
--- src/ya_payment/models/debit_note_accepted_event.py	2020-12-14 16:22:50.593076561 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_payment.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 77,83 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 75,81 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
diff -r -c target/ya_payment/models/debit_note_cancelled_event.py src/ya_payment/models/debit_note_cancelled_event.py
*** target/ya_payment/models/debit_note_cancelled_event.py	2020-12-14 16:11:39.713000000 +0100
--- src/ya_payment/models/debit_note_cancelled_event.py	2020-12-14 16:22:50.645075938 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_payment.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 77,83 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 75,81 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
Only in target/ya_payment/models: debit_note_event.py.orig
Only in target/ya_payment/models: debit_note_event.py.rej
diff -r -c target/ya_payment/models/debit_note_failed_event.py src/ya_payment/models/debit_note_failed_event.py
*** target/ya_payment/models/debit_note_failed_event.py	2020-12-14 16:11:39.713000000 +0100
--- src/ya_payment/models/debit_note_failed_event.py	2020-12-14 16:22:50.497077709 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_payment.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 77,83 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 75,81 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
diff -r -c target/ya_payment/models/debit_note_received_event_all_of.py src/ya_payment/models/debit_note_received_event_all_of.py
*** target/ya_payment/models/debit_note_received_event_all_of.py	2020-12-14 16:11:39.713000000 +0100
--- src/ya_payment/models/debit_note_received_event_all_of.py	2020-12-14 16:22:50.669075651 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_payment.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 77,83 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 75,81 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
diff -r -c target/ya_payment/models/debit_note_received_event.py src/ya_payment/models/debit_note_received_event.py
*** target/ya_payment/models/debit_note_received_event.py	2020-12-14 16:11:39.713000000 +0100
--- src/ya_payment/models/debit_note_received_event.py	2020-12-14 16:22:50.489077806 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_payment.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 77,83 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 75,81 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
diff -r -c target/ya_payment/models/debit_note_rejected_event_all_of.py src/ya_payment/models/debit_note_rejected_event_all_of.py
*** target/ya_payment/models/debit_note_rejected_event_all_of.py	2020-12-14 16:11:39.713000000 +0100
--- src/ya_payment/models/debit_note_rejected_event_all_of.py	2020-12-14 16:22:50.693075364 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_payment.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 103,109 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 101,107 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
diff -r -c target/ya_payment/models/debit_note_rejected_event.py src/ya_payment/models/debit_note_rejected_event.py
*** target/ya_payment/models/debit_note_rejected_event.py	2020-12-14 16:11:39.713000000 +0100
--- src/ya_payment/models/debit_note_rejected_event.py	2020-12-14 16:22:50.505077614 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_payment.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 103,109 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 101,107 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
diff -r -c target/ya_payment/models/debit_note_settled_event.py src/ya_payment/models/debit_note_settled_event.py
*** target/ya_payment/models/debit_note_settled_event.py	2020-12-14 16:11:39.713000000 +0100
--- src/ya_payment/models/debit_note_settled_event.py	2020-12-14 16:22:50.673075603 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_payment.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 77,83 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 75,81 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
Only in target/ya_payment/models: __init__.py.orig
diff -r -c target/ya_payment/models/invoice_accepted_event.py src/ya_payment/models/invoice_accepted_event.py
*** target/ya_payment/models/invoice_accepted_event.py	2020-12-14 16:11:39.713000000 +0100
--- src/ya_payment/models/invoice_accepted_event.py	2020-12-14 16:22:50.745074743 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_payment.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 77,83 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 75,81 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
diff -r -c target/ya_payment/models/invoice_cancelled_event.py src/ya_payment/models/invoice_cancelled_event.py
*** target/ya_payment/models/invoice_cancelled_event.py	2020-12-14 16:11:39.713000000 +0100
--- src/ya_payment/models/invoice_cancelled_event.py	2020-12-14 16:22:50.705075221 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_payment.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 77,83 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 75,81 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
Only in target/ya_payment/models: invoice_event.py.orig
Only in target/ya_payment/models: invoice_event.py.rej
diff -r -c target/ya_payment/models/invoice_failed_event.py src/ya_payment/models/invoice_failed_event.py
*** target/ya_payment/models/invoice_failed_event.py	2020-12-14 16:11:39.713000000 +0100
--- src/ya_payment/models/invoice_failed_event.py	2020-12-14 16:22:50.469078044 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_payment.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 77,83 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 75,81 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
Only in target/ya_payment/models: invoice.py.orig
Only in target/ya_payment/models: invoice.py.rej
diff -r -c target/ya_payment/models/invoice_received_event_all_of.py src/ya_payment/models/invoice_received_event_all_of.py
*** target/ya_payment/models/invoice_received_event_all_of.py	2020-12-14 16:11:39.713000000 +0100
--- src/ya_payment/models/invoice_received_event_all_of.py	2020-12-14 16:22:50.737074838 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_payment.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 77,83 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 75,81 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
diff -r -c target/ya_payment/models/invoice_received_event.py src/ya_payment/models/invoice_received_event.py
*** target/ya_payment/models/invoice_received_event.py	2020-12-14 16:11:39.713000000 +0100
--- src/ya_payment/models/invoice_received_event.py	2020-12-14 16:22:50.713075125 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_payment.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 77,83 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 75,81 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
diff -r -c target/ya_payment/models/invoice_rejected_event_all_of.py src/ya_payment/models/invoice_rejected_event_all_of.py
*** target/ya_payment/models/invoice_rejected_event_all_of.py	2020-12-14 16:11:39.713000000 +0100
--- src/ya_payment/models/invoice_rejected_event_all_of.py	2020-12-14 16:22:50.481077900 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_payment.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 103,109 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 101,107 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
diff -r -c target/ya_payment/models/invoice_rejected_event.py src/ya_payment/models/invoice_rejected_event.py
*** target/ya_payment/models/invoice_rejected_event.py	2020-12-14 16:11:39.713000000 +0100
--- src/ya_payment/models/invoice_rejected_event.py	2020-12-14 16:22:50.537077230 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_payment.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 103,109 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 101,107 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
diff -r -c target/ya_payment/models/invoice_settled_event.py src/ya_payment/models/invoice_settled_event.py
*** target/ya_payment/models/invoice_settled_event.py	2020-12-14 16:11:39.713000000 +0100
--- src/ya_payment/models/invoice_settled_event.py	2020-12-14 16:22:50.433078475 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_payment.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 77,83 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 75,81 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
diff -r -c target/ya_payment/models/payment_received_event_all_of.py src/ya_payment/models/payment_received_event_all_of.py
*** target/ya_payment/models/payment_received_event_all_of.py	2020-12-14 16:11:39.713000000 +0100
--- src/ya_payment/models/payment_received_event_all_of.py	2020-12-14 16:22:50.421078619 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_payment.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 77,83 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 75,81 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
diff -r -c target/ya_payment/models/payment_received_event.py src/ya_payment/models/payment_received_event.py
*** target/ya_payment/models/payment_received_event.py	2020-12-14 16:11:39.713000000 +0100
--- src/ya_payment/models/payment_received_event.py	2020-12-14 16:22:50.605076417 +0100
***************
*** 13,20 ****
  import pprint
  import re  # noqa: F401
  
- import six
- 
  from ya_payment.configuration import Configuration
  
  
--- 13,18 ----
***************
*** 77,83 ****
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr, _ in six.iteritems(self.openapi_types):
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
--- 75,81 ----
          """Returns the model properties as a dict"""
          result = {}
  
!         for attr in self.openapi_types:
              value = getattr(self, attr)
              if isinstance(value, list):
                  result[attr] = list(map(
Only in src/ya_payment/models: __pycache__
Only in src/ya_payment: __pycache__
Only in target/ya_payment: rest.py.orig
Only in src/ya_payment/test: __pycache__
Only in target/ya_payment/test: test_allocation.py.orig
Only in target/ya_payment/test: test_allocation.py.rej
Only in target/ya_payment/test: test_debit_note_event.py.orig
Only in target/ya_payment/test: test_debit_note_event.py.rej
Only in target/ya_payment/test: test_invoice_event.py.orig
Only in target/ya_payment/test: test_invoice_event.py.rej
Only in target/ya_payment/test: test_invoice.py.orig
Only in target/ya_payment/test: test_invoice.py.rej
Only in target/ya_payment/test: test_provider_api.py.orig
Only in target/ya_payment/test: test_requestor_api.py.orig
